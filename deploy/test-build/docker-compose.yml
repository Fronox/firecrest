version: '3'

services:
  certificator:
    build: 
      context: ../../
      dockerfile: deploy/docker/certificator/Dockerfile
    env_file:
      - ./environment/common.env
    network_mode: "host"
    volumes:
      - "./environment/keys/ca-key:/ca-key:ro"
      - "./environment/keys/user-key.pub:/user-key.pub:ro"

  compute:
    build:
      context: ../../
      dockerfile: deploy/docker/compute/Dockerfile
    env_file:
      - ./environment/common.env
    network_mode: "host"
    volumes:
      - "./environment/keys/user-key:/user-key:ro"

  status:
    build:
      context: ../../
      dockerfile: deploy/docker/status/Dockerfile
    env_file:
      - ./environment/common.env
    network_mode: "host"

  storage:
    build:
      context: ../../
      dockerfile: deploy/docker/storage/Dockerfile
    env_file:
      - ./environment/common.env
      - ./environment/storage.env
    network_mode: "host"
    depends_on:
      - "tasks"
      - "minio"
    volumes:
      - "./environment/keys/user-key:/user-key:ro"

  tasks:
    build: 
      context: ../../
      dockerfile: deploy/docker/tasks/Dockerfile
    env_file:
      - ./environment/common.env
    environment:
      - PERSIST_PORT=6379
      - PERSIST_PWD=rediS2200
      - DEBUG_MODE=True
    depends_on:
      - "taskpersistence"
    network_mode: "host"

  utilities:
    build: 
      context: ../../
      dockerfile: deploy/docker/utilities/Dockerfile
    env_file:
      - ./environment/common.env
    network_mode: "host"
    volumes:
      - "./environment/keys/user-key:/user-key:ro"

  # auxiliary containers
  cluster:
    # runs on private network to avoid conflict with a local SSH server
    build: 
      context: ./
      dockerfile: ./cluster/Dockerfile
    hostname: cluster
    ports:
      - "2223:22"

  minio:
    # runs on private network so "cluster" can reach it
    container_name: minio_test_build
    image: minio/minio
    command: minio server /data
    environment:
      MINIO_ACCESS_KEY: storage_access_key
      MINIO_SECRET_KEY: storage_secret_key
    ports:
      - "9000:9000"

  taskpersistence:
    image: redis:latest
    command: redis-server /redis.conf
    network_mode: "host"
    volumes:
      - ./taskpersistence/redis.conf:/redis.conf:ro
