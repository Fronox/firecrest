# Environment vars common for all microservices
# Important: all lists use semicolon to separate items, and must be quoted to escape ';'
# name of header key used to get authentication:
# possible values: "Authorization" ("X-Userinfo" was disabled)
# Authorization:  JWT token as generated by Keycloak: {"Authorization:", "Bearer fjfk..."}
AUTH_HEADER_NAME=Authorization
# If AUTH_HEADER_NAME = Authorization, it can also check REALM_RSA_PUBLIC_KEY: RSA key from KeyCloak Realm which signs token.
# REALM_RSA_PUBLIC_KEY="MII....QAB"
# use 1 line without headers ("-----BEGIN PUBLIC KEY-----", "-----END PUBLIC KEY-----")
REALM_RSA_PUBLIC_KEY='MIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEAswWLm+3k69JFET5XlDN7NZJU/KEklrvKh2qsWPqveM03kfmrf75uax3UKo7sS4WqGCiI9NUZCA6cg3zHwKpEU39h1HZNIOs/NdjBW4jW9yE7jS7EHmrrXhXaRxSP68eH/QJ3oTjMCvy5rp2GKCn10cOoyRcKB4YZ0kHtGWxPE265c1buAaf9lAMF8NyHRfNuYCCTSbvx5tehmByNTdVasFfimUiWMGDzOAf9HBCdv06cvZNxEHVr6n4RhR3kyqsfXn+fxSgIMLgwPfE9RzD9yuMa8zwStfhVP6erBs1hSux0wWYHXHqzuFwIHtBkijD1qKK2P57ZyYuonc2BBFF9DRxJlp+eO0J8S/3m8FmYUzVQVEldYFai8OO2obc8JJLDhUAp+vSh6crKp9OfFMtHm2qztsznVnBI9y5x8bXupj+C2EXlMgSK3MqbOs4e35kESqOOjExUQtnWJu+JKSsnNaGjt4VDTqXTLpcjQ9B7MWK+f6vBwjN/WYv3oHnDxZm1AgMBAAE='
#kid: "fVc6h439Xv...."
AUTH_TOKEN_ISSUER='https://auth.cscs.ch/auth/realms/cscs'
# specify Audience established by Keycloak, leave empty to skip verification
AUTH_TOKEN_AUD=''
# list authorized users, will be checked by cscs_api_common.py: get_username
AUTH_ALLOWED_USERS=''
# Keycloak scope for clients:
AUTH_REQUIRED_SCOPE=''
REALM_RSA_TYPE=RS256
# scopes filtered for this Firecrest, eg  firecrest-tds.cscs.ch, firecrest-production.cscs.ch
FIRECREST_SERVICE='firecrest-tds.cscs.ch'
#-------
# microservices IPs, also defined on each 'env_make' inside containers
CERTIFICATOR_IP=127.0.0.1
JOBS_IP=127.0.0.1
PERSISTENCE_IP=127.0.0.1     #TaskPersistence (redis)
TASKS_IP=127.0.0.1
STATUS_IP=127.0.0.1
STORAGE_IP=127.0.0.1
UTILITIES_IP=127.0.0.1
#----- ports:
CERTIFICATOR_PORT=5010
JOBS_PORT=5000
TASKS_PORT=5003
STATUS_PORT=5001
STORAGE_PORT=5002
UTILITIES_PORT=5004
#-------
# microservices urls: used by Kong and between microservices
CERTIFICATOR_URL=http://127.0.0.1:5010
TASKS_URL=http://127.0.0.1:5003
JOBS_URL=http://127.0.0.1:5000
STORAGE_URL=http://127.0.0.1:5002
UTILITIES_URL=http://127.0.0.1:5004
STATUS_URL=http://127.0.0.1:5001
# kong_url: used by microservices when return URL to clients
KONG_URL=http://148.187.97.214:8000
#-------
# list of systems 
#public name for systems, where users except to submit jobs and get files (list with ';')
SYSTEMS_PUBLIC='daint;dom'
#internal machines that microservices connect to (in correlation with SYSTEMS_PUBLIC)
SYSTEMS_INTERNAL_JOBS='127.0.0.1:2223;127.0.0.1:2224'
SYSTEMS_INTERNAL_STORAGE='127.0.0.1:2222;127.0.0.1:2222'
SYSTEMS_INTERNAL_UTILITIES='127.0.0.1:2222;127.0.0.1:2222'
#-------
# JOBS options
JOB_BASE_DIR=$HOME
#-------
# Storage:
# public systems to send a job for internal transfer (xfer), must be defined in SYSTEMS_PUBLIC
STORAGE_JOBS_MACHINE=daint
# expiration time (in secs) for expiration of URL and files
STORAGE_TEMPURL_EXP_TIME=2592000
# staging area max size file supported (in Bytes)
STORAGE_MAX_FILE_SIZE=5368709120
# Storage technology used for staging area (swift or s3)
OBJECT_STORAGE=swift
#-------
# STATUS: microservices & systems to pool:
STATUS_SERVICES='certificator;utilities;jobs;tasks;storage'
STATUS_SYSTEMS='127.0.0.1:2223;127.0.0.1:2224'
#-------
# UTILITIES: max size of file for download/upload from filesystem in MB
UTILITIES_MAX_FILE_SIZE=5
# TIMEOUT in seconds for synchronous tasks
UTILITIES_TIMEOUT=5
#------
# KONG internal URLs for services
KONG_JOBS_URL=http://10.1.0.8:5000
KONG_STATUS_URL=http://10.1.0.8:5001
KONG_STORAGE_URL=http://10.1.0.8:5002
KONG_TASKS_URL=http://10.1.0.8:5003
KONG_UTILITIES_URL=http://10.1.0.8:5004
