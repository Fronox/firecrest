# Environment vars common for all microservices
# Important: all lists use semicolon to separate items, and must be quoted to escape ';'
# name of header key used to get authentication:
# possible values: "Authorization" ("X-Userinfo" was disabled)
# Authorization:  JWT token as generated by Keycloak: {"Authorization:", "Bearer fjfk..."}
AUTH_HEADER_NAME=Authorization
# If AUTH_HEADER_NAME = Authorization, it can also check REALM_RSA_PUBLIC_KEY: RSA key from KeyCloak Realm which signs token.
# REALM_RSA_PUBLIC_KEY="MII....QAB"
# use 1 line without headers ("-----BEGIN PUBLIC KEY-----", "-----END PUBLIC KEY-----")
REALM_RSA_PUBLIC_KEY=
#kid: "fVc6h439Xv...."
AUTH_TOKEN_ISSUER=''
# specify Audience established by Keycloak, leave empty to skip verification
AUTH_TOKEN_AUD=''
# list authorized users, will be checked by cscs_api_common.py: get_username
AUTH_ALLOWED_USERS=''
# Keycloak scope for clients:
AUTH_REQUIRED_SCOPE=''
REALM_RSA_TYPE=RS256
# scopes filtered for this Firecrest, eg  firecrest-tds.cscs.ch, firecrest-production.cscs.ch
FIRECREST_SERVICE=''
#-------
# microservices IPs, also defined on each 'env_make' inside containers
CERTIFICATOR_IP=127.0.0.1
COMPUTE_IP=127.0.0.1
#TaskPersistence (redis)
PERSISTENCE_IP=127.0.0.1
TASKS_IP=127.0.0.1
STATUS_IP=127.0.0.1
STORAGE_IP=127.0.0.1
UTILITIES_IP=127.0.0.1
#----- ports:
CERTIFICATOR_PORT=5010
COMPUTE_PORT=5000
TASKS_PORT=5003
STATUS_PORT=5001
STORAGE_PORT=5002
UTILITIES_PORT=5004
#-------
# microservices urls: used by Kong and between microservices. Must replace $SERVICE_PORT with the port number
CERTIFICATOR_URL=http://127.0.0.1:5010
TASKS_URL=http://127.0.0.1:5003
COMPUTE_URL=http://127.0.0.1:5000
STORAGE_URL=http://127.0.0.1:5002
UTILITIES_URL=http://127.0.0.1:5004
STATUS_URL=http://127.0.0.1:5001
# kong_url: used by microservices when return URL to clients
KONG_URL=
#-------
# list of systems 
#public name for systems, where users except to submit jobs and get files (list with ';')
SYSTEMS_PUBLIC='system01;system02'
#internal machines that microservices connect to (in correlation with SYSTEMS_PUBLIC)
SYSTEMS_INTERNAL_COMPUTE='127.0.0.1:2223;127.0.0.1:2224'
SYSTEMS_INTERNAL_STORAGE='127.0.0.1:9000;127.0.0.1:2222'
SYSTEMS_INTERNAL_UTILITIES='127.0.0.1:2223;127.0.0.1:2222'
#-------
# JOBS options
JOB_BASE_DIR=$HOME
#-------
# Storage:
# public systems to send a job for internal transfer (xfer), must be defined in SYSTEMS_PUBLIC
STORAGE_JOBS_MACHINE=system01
# expiration time (in secs) for expiration of URL and files (604800=7 days)
STORAGE_TEMPURL_EXP_TIME=604800
# staging area max size file supported (in Bytes)
STORAGE_MAX_FILE_SIZE=5368709120
# Storage technology used for staging area (swift or s3v2 or s3v4, unset to disable)
OBJECT_STORAGE='s3v4'
#-------
# STATUS: microservices & systems to pool:
STATUS_SERVICES='certificator;utilities;compute;tasks;storage'
STATUS_SYSTEMS='127.0.0.1;127.0.0.1;127.0.0.1;127.0.0.1;127.0.0.1;'
#-------
# UTILITIES: max size of file for download/upload from filesystem in MB
UTILITIES_MAX_FILE_SIZE=5
# TIMEOUT in seconds for synchronous tasks
UTILITIES_TIMEOUT=5
#------
# KONG internal URLs for services
KONG_JOBS_URL=
KONG_STATUS_URL=
KONG_STORAGE_URL=
KONG_TASKS_URL=
KONG_UTILITIES_URL=
